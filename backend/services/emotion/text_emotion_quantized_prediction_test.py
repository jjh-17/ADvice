from sklearn.metrics import accuracy_score, confusion_matrix, precision_recall_fscore_support
from text_emotion_quantized_prediction import BERTDataset, BERTClassifier, TextEmotionPrediction
import time

# 기대 결과
texts = [
    "오늘 날씨가 정말 화창해서 기분이 좋아요.",
    "이번 프로젝트를 성공적으로 마무리 짓게 되어 너무 기쁩니다.",
    "최근에 새로 시작한 요가가 몸과 마음에 정말 좋은 것 같아요.",
    "너의 도움 덕분에 큰 어려움을 극복할 수 있었어, 정말 고마워.",
    "우리 팀이 이번 대회에서 우승해서 너무 행복합니다!",
    "마침내 오랫동안 꿈꾸던 집을 구매할 수 있게 되었습니다.",
    "아이가 학교에서 상을 받아와서 자랑스러워요.",
    "오랜 친구와 재회해서 하루 종일 즐거웠습니다.",
    "이 책을 읽고 나니 새로운 인사이트를 얻은 것 같아 기분이 좋습니다.",
    "여행에서 돌아온 후로 마음이 평온해졌어요.",
    "새로운 요리 레시피를 시도했는데 가족 모두가 좋아했습니다.",
    "오늘 짐에서 개인 최고 기록을 경신했어요!",
    "새로운 취미를 시작하니 매일이 즐거워요.",
    "마침내 그 어려운 시험을 통과했어요!",
    "오늘은 정말 완벽한 날이에요.",
    "친구들과 함께한 저녁 시간이 정말 즐거웠습니다.",
    "새로운 승진 제안을 받고 매우 기뻐요.",
    "우리 아기가 처음으로 걸음마를 했어요!",
    "오늘따라 모든 게 잘 풀리는 것 같아 기분이 좋습니다.",
    "새로운 영화가 생각보다 훨씬 재미있었어요.",
    "최근에 시작한 다이어트가 성과를 보이기 시작했어요.",
    "오랫동안 봐왔던 드라마의 결말이 너무 만족스러워요.",
    "친구가 생일 선물로 내가 원하던 것을 줘서 행복해요.",
    "새로운 식당에서 먹은 음식이 정말 맛있었어요.",
    "오늘은 할 일을 모두 끝내고 편안하게 휴식을 취할 수 있을 것 같아요.",
    "동료들과의 워크숍이 매우 유익했습니다.",
    "아침에 일어나자마자 좋은 소식을 들어 기분이 좋아졌어요.",
    "최근에 힘들었던 문제를 해결해서 마음이 한결 가벼워졌어요.",
    "이번 주말 계획이 너무 기대돼요.",
    "오늘 만난 새로운 사람들과 잘 어울려 너무 행복했어요.",
    "오늘은 수요일입니다.",
    "차량 속도 제한은 시간당 60킬로미터입니다.",
    "도서관은 오전 9시에 문을 엽니다.",
    "이 메뉴는 채식 옵션이 포함되어 있습니다.",
    "밖은 흐리지만 비는 오지 않고 있습니다.",
    "이 책은 300페이지로 구성되어 있습니다.",
    "현재 스마트폰 배터리가 50% 남아 있습니다.",
    "창 밖으로 풍경이 보이는 자리가 여기 있습니다.",
    "이 제품의 보증 기간은 1년입니다.",
    "오늘 팀 회의는 오후 3시에 시작됩니다.",
    "그 영화는 다음 주 금요일에 개봉합니다.",
    "차량은 주차장 5구역에 있습니다.",
    "오늘 아침 메뉴에는 오믈렛과 토스트가 포함되어 있습니다.",
    "이 공항은 국제선과 국내선 터미널로 나뉘어 있습니다.",
    "저녁 시간대에는 교통이 혼잡할 수 있습니다.",
    "내년에는 전시회가 두 차례 더 열릴 예정입니다.",
    "우리 회사는 현재 100명의 직원을 고용하고 있습니다.",
    "이 컴퓨터는 최신 운영 시스템을 지원합니다.",
    "현재 세션은 30분 후에 종료됩니다.",
    "이 공간은 금연 구역입니다.",
    "저는 매일 아침 커피를 한 잔 마십니다.",
    "이 문서는 회사 내부에서만 공유됩니다.",
    "본 행사는 실내에서 진행됩니다.",
    "주요 도로 공사는 다음 달에 시작됩니다.",
    "제품의 치수는 가로 120cm, 세로 60cm입니다.",
    "현재 그 지역의 평균 온도는 섭씨 15도입니다.",
    "이 앱은 안드로이드와 iOS 모두에서 사용할 수 있습니다.",
    "학교는 여름 방학을 2주 앞두고 있습니다.",
    "이 회사는 5년 연속 흑자를 기록했습니다.",
    "그 서점은 새로운 베스트셀러를 매주 화요일에 입고합니다.",
    "오늘 하루 종일 비가 와서 기분이 우울해졌어요.",
    "이 프로젝트 결과에 정말 실망했습니다.",
    "최근에 시작한 다이어트가 전혀 효과가 없는 것 같아요.",
    "도와줬음에도 불구하고 그는 감사의 말 한마디 없었습니다.",
    "우리 팀이 이번 경기에서 패배해서 마음이 무겁습니다.",
    "새로 산 스마트폰이 벌써 고장 났습니다.",
    "어제 밤부터 계속 두통이 심해져서 걱정이 됩니다.",
    "기대했던 만큼 이번 휴가는 즐겁지 않았어요.",
    "이 책은 읽다가 중간에 포기했습니다. 내용이 너무 지루했어요.",
    "이번 주말은 계획이 모두 엉망이 되어 버렸어요.",
    "오늘 저녁 메뉴가 전혀 입맛에 맞지 않았습니다.",
    "피트니스 센터가 갑자기 문을 닫아서 당황스러웠어요.",
    "이 영화는 기대했던 것만큼 재미있지 않았습니다.",
    "새로 옮긴 사무실이 너무 좁고 불편합니다.",
    "요즘 들어 스트레스를 많이 받고 있어서 힘들어요.",
    "아침에 일어나자마자 나쁜 소식을 들어서 기분이 안 좋았습니다.",
    "차가 고장 나서 길에서 몇 시간 동안 갇혀 있었어요.",
    "지금의 직장에 만족하지 못하고 있습니다.",
    "아무리 노력해도 상황이 나아지지 않는 것 같아요.",
    "이번 프레젠테이션은 실패였다고 생각합니다.",
    "나는 이 파티에서 전혀 즐기지 못했습니다.",
    "그 사람의 태도가 정말 실망스러웠어요.",
    "저녁 회의가 너무 길어져서 지쳤습니다.",
    "예상치 못한 지출로 이번 달 예산이 많이 부족합니다.",
    "방금 들은 노래가 전혀 내 스타일이 아니었어요.",
    "오늘 회의는 별다른 진전 없이 끝났습니다.",
    "그 제품은 사용해보니 기대했던 것만큼 좋지 않았어요.",
    "최근 발생한 사고로 교통이 매우 혼잡합니다.",
    "이메일을 확인하다가 좋지 않은 소식을 접했습니다.",
    "오랜 시간 기다린 끝에 결과가 실망스러웠습니다."
]
expected = [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
]

# 1. 시간 측정
start_time = time.time()
detector = TextEmotionPrediction()
middle_time = time.time()
result = detector.predict(texts)
end_time = time.time()

print('==================================================================')
print('1. 전체 시간')
print('==================================================================')
print("문장 개수: " + str(len(texts)))
print("디텍터: " + str(middle_time-start_time))
print("모델: " + str(end_time-middle_time))
print("전체: " + str(end_time-start_time))
for text, r in zip(texts, result):
    print(text + ' : ' + str(r))

print('==================================================================')
print('2. 오차 행렬')
print('==================================================================')
conf_mat = confusion_matrix(expected, result)
print(conf_mat)

print('==================================================================')
print('3. 정확도, 정밀도, 재현율, F1 Score')
print('==================================================================')
precision, recall, f1_score, _ = precision_recall_fscore_support(expected, result, average='macro')
print(f"Precision: {precision:.2f}")
print(f"Recall: {recall:.2f}")
print(f"F1 Score: {f1_score:.2f}")

accuracy = accuracy_score(expected, result)
print(f"Accuracy: {accuracy:.2f}")